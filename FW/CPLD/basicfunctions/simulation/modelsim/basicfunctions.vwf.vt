// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/30/2021 18:59:07"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          basicfunctions
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module basicfunctions_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCKPIN;
reg CPLD_EEPROM_MISO;
reg DSP_EEPROM_CS;
reg DSP_EEPROM_MOSI;
reg DSP_EEPROM_SCK;
// wires                                               
wire CPLD_EEPROM_CS;
wire CPLD_EEPROM_MOSI;
wire CPLD_EEPROM_SCK;
wire DSP_EEPROM_MISO;
wire DSP_PWR_EN;
wire DSP_RST;
wire DSPCLKOUT;
wire TEST_PIN;
wire TEST_PIN2;

// assign statements (if any)                          
basicfunctions i1 (
// port map - connection between master ports and signals/registers   
	.CLOCKPIN(CLOCKPIN),
	.CPLD_EEPROM_CS(CPLD_EEPROM_CS),
	.CPLD_EEPROM_MISO(CPLD_EEPROM_MISO),
	.CPLD_EEPROM_MOSI(CPLD_EEPROM_MOSI),
	.CPLD_EEPROM_SCK(CPLD_EEPROM_SCK),
	.DSP_EEPROM_CS(DSP_EEPROM_CS),
	.DSP_EEPROM_MISO(DSP_EEPROM_MISO),
	.DSP_EEPROM_MOSI(DSP_EEPROM_MOSI),
	.DSP_EEPROM_SCK(DSP_EEPROM_SCK),
	.DSP_PWR_EN(DSP_PWR_EN),
	.DSP_RST(DSP_RST),
	.DSPCLKOUT(DSPCLKOUT),
	.TEST_PIN(TEST_PIN),
	.TEST_PIN2(TEST_PIN2)
);
initial 
begin 
#1000000 $stop;
end 

// CLOCKPIN
always
begin
	CLOCKPIN = 1'b0;
	CLOCKPIN = #500 1'b1;
	#500;
end 

// CPLD_EEPROM_MISO
initial
begin
	CPLD_EEPROM_MISO = 1'b0;
end 

// DSP_EEPROM_CS
initial
begin
	DSP_EEPROM_CS = 1'b0;
end 

// DSP_EEPROM_MOSI
initial
begin
	DSP_EEPROM_MOSI = 1'b0;
end 

// DSP_EEPROM_SCK
initial
begin
	DSP_EEPROM_SCK = 1'b0;
end 
endmodule

